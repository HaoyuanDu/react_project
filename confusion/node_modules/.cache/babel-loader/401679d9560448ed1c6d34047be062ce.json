{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport fetch from 'cross-fetch';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ':' + response.statusText);\n      error.response = error;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(data => dispatch(addDishes(data))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ':' + response.statusText);\n      error.response = error;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(data => dispatch(addPromos(data))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ':' + response.statusText);\n      error.response = error;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(data => dispatch(addComments(data))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n  return fetch(baseUrl + 'leaders').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var err = new Error('Error' + response.status + ':' + response.statusText);\n      throw err;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(data => dispatch(addLeaders(data))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  newFeedback.date = new Date().toISOString();\n  console.log(newFeedback);\n  return fetch(baseUrl + 'feedback', {\n    method: 'POST',\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      console.log(response);\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).catch(error => {\n    console.log('post Feedback', error.message);\n    alert('Your Feedback could not be posted\\nError: ' + error.message);\n  });\n};","map":{"version":3,"sources":["M:/study3/full stack/react_project/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","fetch","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchDishes","dishesLoading","err","data","addDishes","dishesFailed","DISHES_LOADING","errmess","DISHES_FAILED","dishes","ADD_DISHES","fetchPromos","promosLoading","addPromos","promosFailed","PROMOS_LOADING","promos","ADD_PROMOS","PROMOS_FAILED","fetchComments","addComments","commentsFailed","comments","ADD_COMMENTS","COMMENTS_FAILED","fetchLeaders","leadersLoading","addLeaders","leadersFailed","LEADERS_LOADING","leaders","ADD_LEADERS","LEADERS_FAILED","postFeedback","firstname","lastname","telnum","email","agree","contactType","newFeedback"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport fetch from 'cross-fetch';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type:ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n}); \r\n\r\nexport const postComment = (dishId,rating,author,comment) =>(dispatch)=> {\r\n    const newComment = {\r\n        dishId:dishId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment\r\n    }\r\n    newComment.date=new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n}; \r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl+'dishes')\r\n    .then(response => {if(response.ok){\r\n        return response;\r\n    }\r\n    else{\r\n        var error = new Error('Error'+response.status+':'+response.statusText);\r\n        error.response=error;\r\n        throw error;\r\n    }},\r\n    error => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => dispatch(addDishes(data)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl+'promotions')\r\n    .then(response => {if(response.ok){\r\n        return response;\r\n    }\r\n    else{\r\n        var error = new Error('Error'+response.status+':'+response.statusText);\r\n        error.response=error;\r\n        throw error;\r\n    }},\r\n    error => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n    })\r\n    .then(response => response.json()).then(data => dispatch(addPromos(data)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type:ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type:ActionTypes.ADD_PROMOS,\r\n    payload:promos\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type:ActionTypes.PROMOS_FAILED,\r\n    payload:errmess\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl+'comments')\r\n    .then(response => {if(response.ok){\r\n        return response;\r\n    }\r\n    else{\r\n        var error = new Error('Error'+response.status+':'+response.statusText);\r\n        error.response=error;\r\n        throw error;\r\n    }},\r\n    error => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n    })\r\n    .then(response=>response.json()).then(data=>dispatch(addComments(data)))\r\n    .catch(error => dispatch(commentsFailed(error.message)))\r\n};\r\n\r\nexport const addComments = (comments) => ({\r\n    type:ActionTypes.ADD_COMMENTS,\r\n    payload:comments\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type:ActionTypes.COMMENTS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n    return fetch(baseUrl+'leaders')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var err = new Error('Error'+response.status+':'+response.statusText);\r\n            throw err;\r\n        }\r\n    },\r\n    error => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => dispatch(addLeaders(data)))\r\n    .catch(error => dispatch(leadersFailed(error.message)))\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type:ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type:ActionTypes.ADD_LEADERS,\r\n    payload:leaders\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type:ActionTypes.LEADERS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n    const newFeedback ={\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message,\r\n    };\r\n    newFeedback.date=new Date().toISOString();\r\n    console.log(newFeedback);\r\n    return fetch(baseUrl+'feedback',{\r\n        method:'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          console.log(response);\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .catch(error =>  { console.log('post Feedback', error.message); alert('Your Feedback could not be posted\\nError: '+error.message); });\r\n};"]},"metadata":{},"sourceType":"module"}