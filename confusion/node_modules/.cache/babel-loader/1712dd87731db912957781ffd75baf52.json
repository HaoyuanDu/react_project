{"ast":null,"code":"import * as ActionTypes from './ActionType';\nexport const Leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["M:/study3/full stack/react_project/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errMess","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AACA,OAAO,MAAMC,OAAO,GAAG,CACrBC,KAAK,GAAG;AACNC,EAAAA,SAAS,EAAE,IADL;AAENC,EAAAA,OAAO,EAAE,IAFH;AAGNC,EAAAA,OAAO,EAAE;AAHH,CADa,EAMrBC,MANqB,KAOlB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,WAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAJX,OAAP;;AAMF,SAAKT,WAAW,CAACU,eAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELC,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKL,WAAW,CAACW,cAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAHX;AAILJ,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOH,KAAP;AAvBJ;AAyBD,CAjCM","sourcesContent":["import * as ActionTypes from './ActionType';\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload,\r\n      };\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: [],\r\n      };\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: action.payload,\r\n        leaders: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}