{"ast":null,"code":"var _jsxFileName = \"M:\\\\study3\\\\full stack\\\\react_project\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Button, Col, Row, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst minLength = len => val => val && val.length >= len;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nfunction RenderDish({\n  dish\n}) {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    width: \"100%\",\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, dish.description)));\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  if (comments == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  }\n\n  const commentsRendered = comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"-- \", comment.author, \" , \", new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit'\n  }).format(new Date(Date.parse(comment.date))))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"list-unstyled comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, commentsRendered));\n}\n\nconst DishDetail = props => {\n  const dish = props.dish;\n\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.comments,\n      addComment: props.addComment,\n      dishId: props.dish.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CommentForm, {\n      dishId: dishId,\n      addComment: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    });\n  }\n\n  class CommentForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isCommentFormOpen: false\n      };\n      this.toggleCommentForm = this.toggleCommentForm.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleCommentForm() {\n      this.setState({\n        isCommentFormOpen: !this.state.isCommentFormOpen\n      });\n    }\n\n    handleSubmit(values) {\n      console.log('Current State is: ' + JSON.stringify(values));\n      alert('Current State is: ' + JSON.stringify(values));\n      this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"secondary\",\n        onClick: this.toggleCommentForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fa fa-pencil\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }), \" Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.isCommentFormOpen,\n        toggle: this.toggleCommentForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LocalForm, {\n        onSubmit: values => this.handleSubmit(values),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"rating\",\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, \"Rating\"), /*#__PURE__*/React.createElement(Col, {\n        md: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Control.select, {\n        model: \".rating\",\n        id: \"rating\",\n        name: \"rating\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 23\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"author\",\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"Your Name\"), /*#__PURE__*/React.createElement(Col, {\n        md: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Control.text, {\n        model: \".author\",\n        id: \"author\",\n        name: \"author\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        validators: {\n          minLength: minLength(3),\n          maxLength: maxLength(15)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".author\",\n        show: \"touched\",\n        messages: {\n          minLength: 'Must be greater than 2 characters',\n          maxLength: 'Must be 15 characters or less'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"comment\",\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(Col, {\n        md: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Control.textarea, {\n        model: \".comment\",\n        id: \"comment\",\n        name: \"comment\",\n        rows: \"6\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, \"Submit\")))))));\n    }\n\n  }\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["M:/study3/full stack/react_project/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Modal","ModalHeader","ModalBody","Link","Button","Col","Row","Label","Control","LocalForm","Errors","minLength","len","val","length","maxLength","RenderDish","dish","image","name","description","RenderComments","comments","addComment","dishId","commentsRendered","map","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","props","id","CommentForm","constructor","state","isCommentFormOpen","toggleCommentForm","bind","handleSubmit","setState","values","console","log","JSON","stringify","alert","rating","render","toggleModal","size","offset"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, Breadcrumb, BreadcrumbItem,\r\n  Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Col, Row, Label} from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n  return (\r\n    <Card>\r\n      <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n      <CardBody>\r\n        <CardTitle>{dish.name}</CardTitle>\r\n        <CardText>{dish.description}</CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction RenderComments({comments, addComment, dishId}) {\r\n  if (comments == null) {\r\n    return (<div></div>);\r\n  }\r\n\r\n  const commentsRendered = comments.map(comment =>\r\n    <li>\r\n      <p>{comment.comment}</p>\r\n      <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      <h4>Comments</h4>\r\n      <ul class=\"list-unstyled comments\">\r\n        {commentsRendered}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  const dish = props.dish;\r\n  if (dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderComments comments={props.comments}\r\n            addComment={props.addComment}\r\n            dishId={props.dish.id}\r\n             />\r\n            <CommentForm dishId={dishId} addComment={addComment} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (<div></div>)\r\n  }\r\n  class CommentForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isCommentFormOpen: false\r\n      };\r\n      this.toggleCommentForm = this.toggleCommentForm.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    toggleCommentForm() {\r\n      this.setState({\r\n        isCommentFormOpen: !this.state.isCommentFormOpen\r\n      });\r\n    }\r\n  \r\n    handleSubmit(values) {\r\n      console.log('Current State is: ' + JSON.stringify(values));\r\n      alert('Current State is: ' + JSON.stringify(values));\r\n      this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Row>\r\n          <Button outline color=\"secondary\" onClick={this.toggleCommentForm}>\r\n              <span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n          <Modal isOpen={this.state.isCommentFormOpen} toggle={this.toggleCommentForm}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n  \r\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                  <Col md={10}>\r\n                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" \r\n                    className=\"form-control\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                  <Col md={10}>\r\n                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                      placeholder=\"Your Name\" className=\"form-control\"\r\n                      validators={{\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15)\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                      messages={{\r\n                        minLength: 'Must be greater than 2 characters',\r\n                        maxLength: 'Must be 15 characters or less'\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                  <Col md={10}>\r\n                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                      rows=\"6\"\r\n                      className=\"form-control\" />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{size: 10, offset: 2}}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Submit</Button>\r\n                  </Col>\r\n                </Row>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}